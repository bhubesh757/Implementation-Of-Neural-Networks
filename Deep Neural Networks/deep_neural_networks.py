# -*- coding: utf-8 -*-
"""Deep Neural Networks.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/196bTfWpMH9jZRRc9ogijzFgrWjeFYc2V
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn import datasets

points = 500
np.random.seed(0)

X,y = datasets.make_circles(n_samples=points,random_state=123,noise=0.1,factor=0.2)

plt.scatter(X[y==0,0],X[y==0,1])
plt.scatter(X[y==1,0],X[y==1,1])

from keras.models import Sequential

from keras.layers import Dense

from keras.optimizers import Adam

model = Sequential()

model.add(Dense(4,input_shape=(2,),activation="sigmoid"))

model.add(Dense(1,activation="sigmoid"))

adam = Adam(lr=0.03)

model.compile(adam,'binary_crossentropy',metrics=['accuracy'])

h = model.fit(x=X,y=y,verbose=1,batch_size=20,epochs=50)

plt.plot(h.history['acc'])
plt.xlabel('accuracy')
plt.ylabel('epochs')
plt.title('Accuracy')

plt.plot(h.history['loss'])
plt.xlabel('Loss')
plt.ylabel('epochs')
plt.title('Loss')

X = 1
y = 1
array = np.array([[X,y]])

array

prediction = model.predict_classes(array)

prediction

