# -*- coding: utf-8 -*-
"""Regression Problem With TensorFlow.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DHjeGN41VESzl3tMBCTVi9WZmDWjXRyk
"""

import tensorflow as tf
import numpy as np

np.random.seed(101)

X = np.linspace(0,10,10) + np.random.uniform(-1.5,1.5,10)

X

Y = np.linspace(0,10,10) + np.random.uniform(-1.5,1.5,10)

Y

import matplotlib.pyplot as plt
# %matplotlib inline

plt.plot(X,Y)

np.random.rand(2)

m = tf.Variable(0.80)

b = tf.Variable(0.40)

error = 0
for x,y in zip(X,Y):
  y_predicted = m * x + b
  error += (y-y_predicted)**2

error

optimizer = tf.train.GradientDescentOptimizer(learning_rate=0.001)

train = optimizer.minimize(error)

init = tf.global_variables_initializer()

with tf.Session() as sess:
  sess.run(init)
  steps = 100
  for i in range(steps):
    sess.run(train)
  m,b = sess.run([m,b])

m

b

y_predicted = m * X +b

plt.plot(X,Y,'*')
plt.plot(X,y_predicted)

