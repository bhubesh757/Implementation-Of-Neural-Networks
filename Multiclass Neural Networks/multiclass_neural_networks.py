# -*- coding: utf-8 -*-
"""Multiclass Neural Networks.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aoas9e7706b4Z12Ff6kAQR2fBn685TCQ
"""

import numpy as np
import matplotlib.pyplot as plt

from keras.models import Sequential

from keras.layers import Dense

from keras.optimizers import Adam

points = 500
centers = [[-1,1],[-1,-1],[1,-1]]

from sklearn import datasets

X,y = datasets.make_blobs(n_samples=points,random_state=123,centers=centers,cluster_std=0.4)

plt.scatter(X[y==0,0],X[y==0,1])
plt.scatter(X[y==1,0],X[y==1,1])
plt.scatter(X[y==2,0],X[y==2,1])

from keras.utils.np_utils import to_categorical

y_cat = to_categorical(y,3)

def plot_multiclass_decision_boundary(X, y, model):
    x_span = np.linspace(min(X[:,0]) - 1, max(X[:,0]) + 1)
    y_span = np.linspace(min(X[:,1]) - 1, max(X[:,1]) + 1)
    xx, yy = np.meshgrid(x_span, y_span)
    grid = np.c_[xx.ravel(), yy.ravel()]
    pred_func = model.predict_classes(grid)
    z = pred_func.reshape(xx.shape)
    plt.contourf(xx, yy, z)

model = Sequential()

model.add(Dense(3,input_shape=(2,),activation="softmax"))

adam = Adam(lr=0.01)

model.compile(adam,'categorical_crossentropy',metrics=['accuracy'])

h = model.fit(x=X,y=y_cat,verbose=1,batch_size=20,epochs=10)

plt.plot(h.history['acc'])
plt.xlabel('Accuracy')
plt.ylabel('epochs')
plt.title('Accuracy')

plt.plot(h.history['loss'])
plt.xlabel('Loss')
plt.ylabel('epochs')
plt.title('Loss')

plot_multiclass_decision_boundary(X,y_cat,model)
plt.scatter(X[y==0,0],X[y==0,1])
plt.scatter(X[y==1,0],X[y==1,1])
plt.scatter(X[y==2,0],X[y==2,1])

